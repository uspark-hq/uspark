name: Turbo

on:
  pull_request:
  push:
    branches:
      - main
  merge_group:

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/uspark-hq/uspark-toolchain:bb0915d

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/toolchain-init

      - name: Lint
        run: lefthook run pre-commit --all-files

  test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/uspark-hq/uspark-toolchain:bb0915d

    services:
      postgres:
        image: postgres:17-alpine
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/toolchain-init

      - name: Test
        run: cd turbo && pnpm test
        env:
          DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/postgres"
          CLERK_SECRET_KEY: "test_clerk_secret_key"
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: "test_clerk_publishable_key"

  # Deploy web application with database
  deploy-web:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/uspark-hq/uspark-toolchain:bb0915d
    if: github.event_name == 'pull_request'
    outputs:
      preview-url: ${{ steps.extract-url.outputs.url }}
    permissions:
      contents: read
      pull-requests: write
      deployments: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Check for changes in web app
        id: check-changes
        run: |
          cd turbo/apps/web
          npx turbo-ignore web || echo "has-changes=true" >> $GITHUB_OUTPUT
      
      - uses: ./.github/actions/toolchain-init
        if: steps.check-changes.outputs.has-changes == 'true'

      # Step 1: Create Neon database branch
      - name: Create Neon Branch and Run Migrations
        if: steps.check-changes.outputs.has-changes == 'true'
        id: branch
        uses: ./.github/actions/neon-branch
        with:
          neon-api-key: ${{ secrets.NEON_API_KEY }}
          neon-project-id: ${{ vars.NEON_PROJECT_ID }}
          branch-name: "${{ github.head_ref }}"
          action: "create"

      # Step 2: Deploy to Vercel with database URL
      - name: Deploy Web to Vercel
        if: steps.check-changes.outputs.has-changes == 'true'
        id: deploy
        uses: ./.github/actions/vercel-deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ vars.VERCEL_TEAM_ID }}
          vercel-project-id: ${{ vars.VERCEL_PROJECT_ID_WEB }}
          environment: preview
          deployment-env: web
          environment-variables: |
            DATABASE_URL=${{ steps.branch.outputs.database-url }}
            NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ vars.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
            CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
          meta-branch: ${{ github.head_ref }}
          meta-pr: ${{ github.event.pull_request.number }}

      # Step 3: Extract deployment URL for E2E tests
      - name: Extract deployment URL
        if: steps.check-changes.outputs.has-changes == 'true'
        id: extract-url
        run: |
          echo "Deployment URL from previous step: ${{ steps.deploy.outputs.url }}"
          echo "url=${{ steps.deploy.outputs.url }}" >> $GITHUB_OUTPUT

  # Deploy docs application
  deploy-docs:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/uspark-hq/uspark-toolchain:bb0915d
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
      deployments: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Check for changes in docs app
        id: check-changes
        run: |
          cd turbo/apps/docs
          npx turbo-ignore docs || echo "has-changes=true" >> $GITHUB_OUTPUT
      
      - uses: ./.github/actions/toolchain-init
        if: steps.check-changes.outputs.has-changes == 'true'

      - name: Deploy Docs to Vercel
        if: steps.check-changes.outputs.has-changes == 'true'
        id: deploy
        uses: ./.github/actions/vercel-deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ vars.VERCEL_TEAM_ID }}
          vercel-project-id: ${{ vars.VERCEL_PROJECT_ID_DOCS }}
          environment: preview
          deployment-env: docs
          meta-branch: ${{ github.head_ref }}
          meta-pr: ${{ github.event.pull_request.number }}

  # Run E2E tests against deployed preview environment
  e2e-test:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/uspark-hq/uspark-toolchain:bb0915d
    needs: [deploy-web]
    if: github.event_name == 'pull_request' && needs.deploy-web.outputs.preview-url
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive  # Initialize BATS submodules
      - uses: ./.github/actions/toolchain-init

      - name: Build CLI
        run: cd turbo && pnpm --filter @uspark/cli build

      - name: Setup CLI
        run: |
          # Verify CLI build output exists
          ls -la turbo/apps/cli/dist/
          
          # Make CLI executable directly (it has shebang)
          chmod +x turbo/apps/cli/dist/index.js
          
          # Create symlink to global bin
          ln -sf "$PWD/turbo/apps/cli/dist/index.js" /usr/local/bin/uspark

      - name: Run BATS E2E Tests
        run: |
          echo "Testing against API_HOST: ${{ needs.deploy-web.outputs.preview-url }}"
          echo "PATH: $PATH"
          which uspark || echo "uspark not found in PATH"
          ./e2e/run.sh
        env:
          API_HOST: ${{ needs.deploy-web.outputs.preview-url }}
