name: Turbo

on:
  pull_request:
  push:
    branches:
      - main
  merge_group:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init

      - name: Lint
        run: npx -y @evilmartians/lefthook run pre-commit --all-files

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init

      - name: Test
        run: cd turbo && pnpm test

  build-cli:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init

      - name: Build Cli
        run: cd turbo && pnpm -F @uspark/cli build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: turbo-build-${{ github.sha }}-cli
          path: turbo/apps/cli/dist
          retention-days: 7
          overwrite: true

  build-web:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init

      - name: Build Web Application
        run: |
          cd turbo
          pnpm turbo run build --filter=web

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./turbo/apps/web
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/uspark-hq/uspark-web:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init

      - name: Build Web Application
        run: |
          cd turbo
          pnpm turbo run build --filter=docs

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./turbo/apps/docs
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/uspark-hq/uspark-docs:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  e2e:
    runs-on: ${{ matrix.os }}
    needs: build-cli
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: turbo-build-${{ github.sha }}-cli
          path: turbo/apps/cli/dist

      - name: Install CLI globally
        run: cd turbo/apps/cli/dist && npm install && npm link

      - name: Run E2E Tests
        run: cd e2e && make test
