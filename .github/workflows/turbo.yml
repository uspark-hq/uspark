name: Turbo

on:
  pull_request:
  push:
    branches:
      - main
  merge_group:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init

      - name: Lint
        run: npx -y @evilmartians/lefthook run pre-commit --all-files

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17-alpine
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init

      - name: Test
        run: cd turbo && pnpm test
        env:
          DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/postgres"
          CLERK_SECRET_KEY: "test_clerk_secret_key"
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: "test_clerk_publishable_key"

  build-web:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init

      - name: Build Web Application
        uses: ./.github/actions/vercel-build
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ vars.VERCEL_TEAM_ID }}
          vercel-project-id: ${{ vars.VERCEL_PROJECT_ID_WEB }}
          artifact-name: turbo-build-${{ github.sha }}-web
          build-env: |
            NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ vars.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
            DATABASE_URL=postgresql://placeholder:placeholder@placeholder:5432/placeholder
            CLERK_SECRET_KEY=placeholder_secret_key

  build-docs:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init

      - name: Build Docs Application
        uses: ./.github/actions/vercel-build
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ vars.VERCEL_TEAM_ID }}
          vercel-project-id: ${{ vars.VERCEL_PROJECT_ID_DOCS }}
          artifact-name: turbo-build-${{ github.sha }}-docs

  # Database for preview environment
  database:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    permissions:
      deployments: write
    outputs:
      database-url: ${{ steps.branch.outputs.database-url }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init

      - name: Create Neon Branch and Run Migrations
        id: branch
        uses: ./.github/actions/neon-branch
        with:
          neon-api-key: ${{ secrets.NEON_API_KEY }}
          neon-project-id: ${{ vars.NEON_PROJECT_ID }}
          branch-name: "${{ github.head_ref }}"
          action: "create"

  # Deploy web application
  deploy-web:
    runs-on: ubuntu-latest
    needs: [build-web, database]
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
      deployments: write
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: turbo-build-${{ github.sha }}-web

      - name: Deploy Web to Vercel
        id: deploy
        uses: ./.github/actions/vercel-deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ vars.VERCEL_TEAM_ID }}
          vercel-project-id: ${{ vars.VERCEL_PROJECT_ID_WEB }}
          environment: preview
          deployment-env: web
          environment-variables: |
            DATABASE_URL=${{ needs.database.outputs.database-url }}
            NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ vars.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
            CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}
          meta-branch: ${{ github.head_ref }}
          meta-pr: ${{ github.event.pull_request.number }}

  # Deploy docs application
  deploy-docs:
    runs-on: ubuntu-latest
    needs: [build-docs]
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
      deployments: write
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: turbo-build-${{ github.sha }}-docs

      - name: Deploy Docs to Vercel
        id: deploy
        uses: ./.github/actions/vercel-deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ vars.VERCEL_TEAM_ID }}
          vercel-project-id: ${{ vars.VERCEL_PROJECT_ID_DOCS }}
          environment: preview
          deployment-env: docs
          meta-branch: ${{ github.head_ref }}
          meta-pr: ${{ github.event.pull_request.number }}
