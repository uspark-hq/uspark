name: release-please

on:
  workflow_run:
    workflows: ["Turbo"]
    branches: ["main"]
    types:
      - completed

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      cli_release_created: ${{ steps.release.outputs['turbo/apps/cli--release_created'] }}
      web_release_created: ${{ steps.release.outputs['turbo/apps/web--release_created'] }}
      docs_release_created: ${{ steps.release.outputs['turbo/apps/docs--release_created'] }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  publish-npm:
    needs: release-please
    if: ${{ needs.release-please.outputs.cli_release_created == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: dawidd6/action-download-artifact@v6
        with:
          run_id: ${{ github.event.workflow_run.id }}
          name: turbo-build-${{ github.event.workflow_run.head_sha }}-cli
          path: turbo/apps/cli/dist

      - uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          registry-url: "https://registry.npmjs.org"

      - run: cd turbo/apps/cli/dist && npm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy-web:
    needs: release-please
    if: ${{ needs.release-please.outputs.web_release_created == 'true' }}
    runs-on: ubuntu-latest
    environment: production
    permissions:
      deployments: write
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/init

      - name: Push database schema
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ vars.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
        run: |
          cd turbo/apps/web
          pnpm db:migrate

      - name: Deploy Web to Render Production
        id: deploy
        run: |
          # Build the deployment payload with environment variables
          PAYLOAD=$(cat <<EOF
          {
            "imageUrl": "ghcr.io/uspark-hq/uspark-web:${{ github.event.workflow_run.head_sha }}",
            "clearCache": "do_not_clear",
            "env": {
              "DATABASE_URL": "${{ secrets.DATABASE_URL }}",
              "NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY": "${{ vars.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}",
              "CLERK_SECRET_KEY": "${{ secrets.CLERK_SECRET_KEY }}"
            }
          }
          EOF
          )
          
          echo "Deploying image: ghcr.io/uspark-hq/uspark-web:${{ github.event.workflow_run.head_sha }}"
          echo "Service ID: ${{ secrets.RENDER_PRODUCTION_SERVICE_ID }}"
          
          # Make the deployment request
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD" \
            "https://api.render.com/v1/services/${{ secrets.RENDER_PRODUCTION_SERVICE_ID }}/deploys"

